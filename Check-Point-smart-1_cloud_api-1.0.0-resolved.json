{
  "openapi": "3.0.0",
  "info": {
    "title": "Smart-1 Cloud API",
    "description": "Versions: [v1](https://app.swaggerhub.com/apis/Check-Point/smart-1_cloud_api/1.0.0) \n# Introduction\nREST API to run Smart-1 Cloud operations, such as: register a gateway and get the service information.\n\nSmart-1 Cloud is a Check Point service offering that provides all-inclusive security management services. Smart-1 Cloud manages security across on-premises appliances, networks, cloud, mobile and IoT. With zero installation, deployment and maintenance, IT teams gain more control and oversight over their entire infrastructure. These advantages make their cloud-native, hybrid and multi-cloud environments even more secure, manageable and compliant.\n\nSmart-1 Cloud is available through the Infinity Portal, Check Pointâ€™s one-stop shop for all SaaS services.\n\nThis API allows you to run Smart-1 Cloud operations, such as register a gateway and get the service information. To configure and view the security policy and objects in the Security Management use the Management APIs.\n\n\n\n\n\n**Important:** Before making any API call, please refer to the **Authentication** section.\n\nRead More:\n* [Smart-1 Cloud product page](https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doShowproductpage&product=482)\n* [Check Point Management APIs](https://sc1.checkpoint.com/documents/latest/APIs/index.html)\n\nDownloads:\n* [Postman Collection](https://sc1.checkpoint.com/documents/CloudGuardConnect/Smart-1_Cloud_API_v1.postman_collection.json)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://cloudinfra-gw.portal.checkpoint.com/app/maas/api/v1/",
      "description": "Check Point Infinity Portal - Root endpoint (Europe)"
    },
    {
      "url": "https://cloudinfra-gw-us.portal.checkpoint.com/app/maas/api/v1/",
      "description": "Check Point Infinity Portal - Root endpoint (US)"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/external": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate using an API Key",
        "description": "Before making any API call, the user needs to authenticate using an API Key.\n\nAn API Key consists of Client ID and Secret Key.\n\nUsers can create API Keys by browsing to Infinity Portal at **GLOBAL SETTINGS > API Keys**.\n\nWhen creating an API Key, make sure that **module** is set to **Smart-1 Cloud**.\n\nA successful authentication results with a temporary authentication token.\n\nThis token will expire 30 minutes from its generation time, for security purposes. Therefore, for web applications it is recommended to re-authenticate prior to getting this temporary authentication token expired.\n\nExample of authenticating with an API Key's Client ID and Secret Key:\n\n    >curl -d '{\"clientId\":\"$CLIENT_ID\",\"accessKey\":\"$SECRET_KEY\"}' -H \"Content-Type: application/json\" -X POST https://cloudinfra-gw.portal.checkpoint.com/auth/external\n\nThe temporary authentication token retrieved at the response of this call, should be then used as  **Authorization: Bearer [token]** header at each request.\n\nExample of adding the authorization bearer token \"abc\" to an API call:\n\n\n    >curl -H \"Authorization: Bearer abc\" https://cloudinfra-gw.portal.checkpoint.com/app/maas/api/v1/mgmt-service",
        "operationId": "getAuthToken",
        "requestBody": {
          "$ref": "#/components/requestBodies/GetAuthToken"
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuthTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorResponse"
                }
              }
            }
          }
        },
        "security": [],
        "servers": [
          {
            "url": "https://cloudinfra-gw.portal.checkpoint.com",
            "description": "Check Point Infinity Portal - Root endpoint (Europe)"
          },
          {
            "url": "https://cloudinfra-gw-us.portal.checkpoint.com",
            "description": "Check Point Infinity Portal - Root endpoint (US)"
          }
        ]
      }
    },
    "/gateways": {
      "get": {
        "tags": [
          "Gateways"
        ],
        "summary": "Fetches all registered gateways",
        "description": "Fetches all registered gateways of a Smart-1 Cloud service",
        "responses": {
          "200": {
            "description": "Properties of the fetched gateways",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchGatewaysResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchGwErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gateways"
        ],
        "summary": "Registers a gateway to be managed by the service",
        "description": "Registers a gateway to be managed by the service. <br/> You can register a new Security Gateway object or register an existing Security Gateway object.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/gateways_body"
              },
              "examples": {
                "Register a new Security Gateway": {
                  "value": {
                    "name": "MarketingGw",
                    "description": "Marketing Branch Gateway"
                  }
                },
                "Register an existing Security Gateway": {
                  "value": {
                    "name": "MarketingGw",
                    "description": "Marketing Branch Gateway",
                    "type": "gateway",
                    "action": "attach"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Gateway registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchGatewayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterGwErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateways/{gatewayName}": {
      "get": {
        "tags": [
          "Gateways"
        ],
        "summary": "Fetches a single gateway",
        "description": "Fetches a single gateway of the Smart-1 Cloud service by its name",
        "parameters": [
          {
            "name": "gatewayName",
            "in": "path",
            "description": "Gateway name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/GatewayName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Properties of the fetched gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchGatewayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchGwErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gateways"
        ],
        "summary": "Deletes a single gateway",
        "description": "Deletes a gateway from a Smart-1 Cloud service by its name",
        "parameters": [
          {
            "name": "gatewayName",
            "in": "path",
            "description": "Gateway name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/GatewayName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted gateway successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteGwErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mgmt-service": {
      "get": {
        "tags": [
          "Mgmt Service"
        ],
        "summary": "Retrieves information of the service",
        "description": "Retrieves information of the Smart-1 Cloud service",
        "responses": {
          "200": {
            "description": "Tenant description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MgmtServiceDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MgmtServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ID": {
        "type": "string",
        "description": "Record unique ID",
        "example": "11111111-1111-1111-1111-111111111111"
      },
      "GatewayName": {
        "type": "string",
        "description": "Gateway Name",
        "example": "MarketingGw"
      },
      "GatewayDescription": {
        "type": "string",
        "description": "Gateway Description",
        "example": "Marketing Branch Gateway"
      },
      "GatewayType": {
        "type": "string",
        "description": "Any of the following: gateway, smallOfficeAppliance,clusterMember",
        "example": "gateway",
        "enum": [
          "gateway",
          "smallOfficeAppliance",
          "clusterMember"
        ]
      },
      "GatewayTypePost": {
        "type": "string",
        "description": "'type' attribute should be used only for 'attach' action. In case of 'create' action, this value is being ignored. <br/> Can be any of the following for 'attach' action: <br/> gateway, smallOfficeAppliance, clusterMember",
        "example": "gateway",
        "enum": [
          "gateway",
          "smallOfficeAppliance",
          "clusterMember"
        ]
      },
      "GatewayAction": {
        "type": "string",
        "description": "Register a new Security Gateway to the serivce. <br/>\n 'create' - creates a new Security Gateway objcect in the management database. <br/> 'attach' - used for registering an existing Security Gateway object. Object is attached by its name. <br/>Common use cases for 'attach' action is when the database was imported and objects already exist or if an object was created directly in the SmartConsole",
        "example": "attach",
        "enum": [
          "create",
          "attach"
        ]
      },
      "GatewayToken": {
        "type": "string",
        "description": "One time token to be used to connect the Gateway to the service",
        "example": "XXXXXXXXXXXXXXXXXXXXXX"
      },
      "GatewayIP": {
        "type": "string",
        "description": "Gateway IP address",
        "example": "100.64.0.13"
      },
      "RegisterGwErrorResponse": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Failed to regitser gateway"
          },
          "success": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "DeleteGwErrorResponse": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Failed to delete gateway"
          },
          "success": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "FetchGwErrorResponse": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Failed to regitser gateway"
          },
          "success": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "MgmtServiceErrorResponse": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Failed to fetch service information"
          },
          "success": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "GatewayResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "name": {
            "$ref": "#/components/schemas/GatewayName"
          },
          "description": {
            "$ref": "#/components/schemas/GatewayDescription"
          },
          "type": {
            "$ref": "#/components/schemas/GatewayType"
          },
          "ip": {
            "$ref": "#/components/schemas/GatewayIP"
          },
          "token": {
            "$ref": "#/components/schemas/GatewayToken"
          },
          "tokenExpiresAt": {
            "type": "string",
            "description": "Token expiration time",
            "example": "2020-06-24T10:46:07.752Z"
          },
          "statusDetails": {
            "$ref": "#/components/schemas/GatewayResponse_statusDetails"
          }
        }
      },
      "FetchGatewayResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/GatewayResponse"
          }
        }
      },
      "FetchGatewaysResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/FetchGatewaysResponse_data"
          }
        }
      },
      "GetAuthTokenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/GetAuthTokenResponse_data"
          }
        }
      },
      "AuthToken": {
        "type": "string",
        "description": "Authentication token to be used in \"Authorization\" request headers for other operations",
        "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnRJZCI6ImEwOGJiZWY3LTE4NDAtNDFlZC05ZWQzLWUyZDZlNGUyMGUxMyIsImNzcmYiOiI2MmJkOGM1OC02NmY5LTQ2YzktYjk3Mi00ZmQzMjhlMjY3NTQiLCJzZXNzaW9uSWQiOiJkOTI4ZDA2NS1mZDRiLTRlNGYtYTU1My00M2JlZjM0MDQ3MmIiLCJjbGllbnRJZCI6IjIwMGJhMTdmLWIzYTItNGM3MC1iOThjLTEzMzI4MDZkNDFhNCIsImRlc2NyaXB0aW9uIjoiQVBJIHRlc3QiLCJhcHBJZCI6IjEyMzQ1Njc4LTY2NjYtMTIzNC0xMjM0LTEyMzQ1Njc4OTEyMyIsInJvbGUiOiJBZG1pbiIsInNjb3BlIjpudWxsLCJpc3N1ZWRCeSI6InRvbWVyc29AY2hlY2twb2ludC5jb20iLCJjb29raWVWZXJzaW9uIjo0LCJpYXQiOjE1NjUxMDk1NTMsImV4cCI6MTU2NTExMTM1M30.K_aZkhIxHdHIHwsqbMCYt31yzpeynbSqPWBk5UC0v0QvG7cxSDN5BcxO0XisKp31mFINCBk8mOcrgRPABtic70iQQ9bVjW1HLPBeLvHRD0rZUUCR7D70LbT-9bgDYyvnAAo6oCBzAAoVNra0S7Vqpx7AW9ET190XRDHHbsZgpmZlZQpn0MOtn7k8GTDJcXa7WYzEtSfOFuqx8TSdvxC6ihy4AWd_zSucydQ-Y3JWLqJt6E2OwK1lZMbtPwpcgFrVtewwcRymoNmSCz9JktbD8yQi6vD241a6_BsTxKDuIW-6R9_g0SJBpVCaDfCYhtYt6x3_2v0ZDdTqG50HLfB6ObwN4iEFVkNZHa8rCEQTBrUmgfDczKhxxa5elzxuxO2a4jNBEUF4zAmvRZSwFT5YaZHqCpKUUWlY2QD8V-gDnKJiwtR_HydGwYdfSMKZkYO0fVEG_HeqxiuIXV3od53ndH_evvK_TbxcxJkR5c2e-LcuZf6BLrxacHkWneTOT3XNsjgGLaj4if5sQu3v7e3_b-vfk3tH_1Z0CR9a4HwleDpWnX6FJwCVyk8U1g29r7svdv94t_N-WnomHOTa7ZHP4xX5NersEUouVLvVXVdoB5AUojvJUdrYjSWd6fy4MEer_JWIosDU4-SwkuRMXfXyYry1-aOMvBKmtIQrDAEDkmU"
      },
      "GetAuthTokenInput": {
        "required": [
          "accessKey",
          "clientId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "description": "Client ID, retrieved from CheckPoint Infinity portal (Global settings -> API Keys)",
            "example": "891f02eb7b2947a2b4b2d77c6cffc054"
          },
          "accessKey": {
            "type": "string",
            "description": "Secret Key, retrieved from Check Point Infinity portal (Global settings -> API Keys)",
            "example": "8edfba157728495c9e21fba1b214169a"
          }
        }
      },
      "UnauthorizedErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              false
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "Authentication required"
            ]
          }
        }
      },
      "MgmtServiceDetailsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/MgmtServiceDetailsResponse_data"
          }
        },
        "description": "Describes the Smart-1 Cloud service"
      },
      "gateways_body": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/GatewayName"
          },
          "description": {
            "$ref": "#/components/schemas/GatewayDescription"
          },
          "type": {
            "$ref": "#/components/schemas/GatewayTypePost"
          },
          "action": {
            "$ref": "#/components/schemas/GatewayAction"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "GatewayResponse_statusDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Gateway registration status: pending, inProgress, completed, error",
            "example": "pending"
          },
          "code": {
            "type": "string",
            "description": "Gateway registration stage code: creating, waitingForConnection, errorAddingToMGMT, tunnelStarted, completed, tokenExpired",
            "example": "waitingForConnection"
          },
          "message": {
            "type": "string",
            "description": "Status message in English",
            "example": "Waiting for connection from gateway"
          }
        }
      },
      "FetchGatewaysResponse_data": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "number of gateways",
            "example": 1
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GatewayResponse"
            }
          }
        }
      },
      "GetAuthTokenResponse_data": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/AuthToken"
          }
        }
      },
      "MgmtServiceDetailsResponse_data_statusDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Service status: pending, inProgress, completed, error",
            "example": "inProgress"
          },
          "code": {
            "type": "string",
            "description": "Service status code: inProgress_(%), completed, pending, ",
            "example": "completed"
          },
          "message": {
            "type": "string",
            "description": "Status message in English",
            "example": "Service is running"
          }
        }
      },
      "MgmtServiceDetailsResponse_data_license": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of license can be trial or active",
            "example": "trial"
          }
        }
      },
      "MgmtServiceDetailsResponse_data": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Smart-1 Cloud service unique identifier",
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "name": {
            "type": "string",
            "description": "Smart-1 Cloud service identifier",
            "example": "smart-1-mgmt-xxxx"
          },
          "sharedSecret": {
            "type": "string",
            "description": "Shared secret is used for estabilishing connection by clients (Management API and SmartConsole).<br/> SmartConsole - Used as part of Connection Token.<br/> Management API - It is part of URL for Web API and it is the value to be used as context for mgmt_cli tool. <br/> For exact syntax and API command structure login to Infinity portal, open your Smart-1 Cloud application and navigate to Settings > General > Management API",
            "example": "11111111-1111-1111-1111-111111111111"
          },
          "statusDetails": {
            "$ref": "#/components/schemas/MgmtServiceDetailsResponse_data_statusDetails"
          },
          "createdAt": {
            "type": "string",
            "description": "Smart-1 Cloud service creation date",
            "example": "2020-06-28T11:46:28.194Z"
          },
          "region": {
            "type": "string",
            "description": "Smart-1 Cloud hosting region",
            "example": "us-east-1"
          },
          "version": {
            "type": "string",
            "description": "Smart-1 Cloud version",
            "example": "R80.40"
          },
          "logRetention": {
            "type": "integer",
            "description": "Desired log retention period",
            "example": 3
          },
          "license": {
            "$ref": "#/components/schemas/MgmtServiceDetailsResponse_data_license"
          }
        }
      }
    },
    "requestBodies": {
      "GetAuthToken": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetAuthTokenInput"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}